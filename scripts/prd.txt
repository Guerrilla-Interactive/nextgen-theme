## 1 · Purpose

Provide a **designer‑first theming workflow**: store brand design‑tokens (colours, type, spacing, etc.) in **Sanity Studio**, preview them live, then compile an **autogenerated `globals.css` + `tailwind.config`** consumed by every web app in our monorepo.

## 2 · Problem Statement

Marketing must ask engineering for every palette tweak; styles live in scattered SCSS files; WCAG compliance isn’t enforced. We need a single source‑of‑truth that anyone on the Design team can edit safely.

## 3 · Success Criteria

| Metric                              | Target                          |
| ----------------------------------- | ------------------------------- |
| Time from token change → production | **≤ 30 min** (auto build)       |
| Tokens passing WCAG AA              | **100 %**                       |
| Apps using the generated theme      | **All web products by Q4 2025** |

## 4 · Personas

| Persona                            | Needs                                                  |
| ---------------------------------- | ------------------------------------------------------ |
| **Danielle – Brand Designer**      | Change colours/type without code, see instant preview. |
| **Eric – Design‑Systems Engineer** | Deterministic JSON → CSS pipeline; stable token IDs.   |
| **Amina – Accessibility QA**       | Confidence that colour contrast is always ≥ 4.5:1.     |

## 5 · Scope

### In‑scope (v1)

1. **Singleton `designTokens` document** with Basic/Advanced UI.
2. **Studio UX**: colour pickers w/ contrast label, live preview pane, tabs.
3. **Node CLI** `generateGlobals.ts` → `globals.css` + `tailwind.config.cjs` snippet.
4. **CI hook**: on publish, rebuild & publish shared theme package.
5. **Docs** inside Studio & repo.

### Out‑of‑scope (v1)

* Mobile (iOS/Android) token export.
* Runtime theme switcher.

## 6 · Functional Requirements

### 6.1 Token Authoring

| ID   | Requirement                                                          | Priority |
| ---- | -------------------------------------------------------------------- | -------- |
| FR‑1 | Toggle **Advanced Mode** to reveal token arrays.                     | Must     |
| FR‑2 | Basic mode shows **Primary/Secondary colour**, **Font**, **Radius**. | Must     |
| FR‑3 | Colour input auto‑generates foreground + WCAG badge.                 | Should   |
| FR‑4 | Component overrides use **reference fields** (no slug typos).        | Must     |
| FR‑5 | Slugs read‑only post‑publish.                                        | Must     |
| FR‑6 | Validation for duplicates / empties.                                 | Must     |

### 6.2 Preview & Feedback

| ID   | Requirement                                                 | Priority |
| ---- | ----------------------------------------------------------- | -------- |
| PR‑1 | Live preview of Shadcn Button/Card/Input with draft tokens. | Should   |
| PR‑2 | WCAG warning banner when contrast < 4.5.                    | Should   |

### 6.3 Build & Export

| ID   | Requirement                                       | Priority |
| ---- | ------------------------------------------------- | -------- |
| EX‑1 | CLI outputs `globals.css` with `:root` + `.dark`. | Must     |
| EX‑2 | CLI outputs Tailwind `theme.extend` JS.           | Must     |
| EX‑3 | CLI infers foreground colours if absent.          | Should   |
| EX‑4 | Build fails on missing critical tokens.           | Must     |

## 7 · Non‑Functional Requirements

| Category      | Spec                            |
| ------------- | ------------------------------- |
| Performance   | Generate ≤ 2 s for 100 tokens.  |
| Security      | Build user token = read‑only.   |
| Accessibility | Default palette passes WCAG AA. |
| Docs          | README + in‑studio tooltips.    |

## 8 · Milestones & Timeline

| Phase        | Deliverable            | Owner          | ETA                |
| ------------ | ---------------------- | -------------- | ------------------ |
| 0 Kick‑off   | Final PRD              | PM             | **20 May 2025** ✔︎ |
| 1 MVP Schema | Basic UI, CLI, CI hook | Dev Team       | **30 Jun 2025**    |
| 2 Studio UX  | Preview, WCAG badges   | Design Systems | **31 Jul 2025**    |
| 3 Beta       | Use on Marketing site  | Web Team       | **31 Aug 2025**    |
| 4 GA         | All apps migrated      | All            | **31 Oct 2025**    |

## 9 · Repository / Folder Structure

All **style‑guide code** must live inside a single feature folder to keep the repo tidy. We’ll create **`desk-organized-sanity-utilities/nextgen-styleguide/`** and place ***everything*** there—schema, queries, desk pane, custom inputs, preview pane and the generator CLI. The rest of the repo only needs an import reference in `all-schemas-combined.ts`.

```
sanity/
└─ desk-organized-sanity-utilities/
   ├─ author/
   ├─ category/
   ├─ …
   └─ nextgen-styleguide/              # ← **NEW mono‑folder home for the theme system**
       ├─ schema/
       │   ├─ design-tokens.document-schema.ts
       │   ├─ fields/
       │   │   └─ wcag-color-pair.field.ts      # reusable colour+foreground object
       │   └─ index.ts                         # exports array of schema types
       │
       ├─ queries/
       │   └─ design-tokens.document-queries.ts # GROQ for CLI & preview
       │
       ├─ structure/
       │   └─ design-tokens.document-structure.ts # custom desk pane + icon
       │
       ├─ components/
       │   ├─ preview-pane/                     # live Shadcn preview iframe/component
       │   └─ inputs/
       │       └─ wcag-badge.input.tsx          # custom colour input w/ WCAG badge
       │
       ├─ scripts/
       │   └─ generateGlobals.ts                # CLI – invoked by CI
       │
       └─ README.md                             # contributor guide & token docs
```

### Folder‑by‑folder cheatsheet

| Folder                                          | Purpose                                         | Owner               |
| ----------------------------------------------- | ----------------------------------------------- | ------------------- |
| `nextgen-styleguide/schema`                     | Singleton schema, field objects, export barrel. | Design Systems      |
| `nextgen-styleguide/structure`                  | Desk pane registering singleton & icon.         | Design Systems      |
| `nextgen-styleguide/queries`                    | GROQ for generator & preview.                   | Design Systems      |
| `nextgen-styleguide/components/inputs`          | Custom Sanity inputs (WCAG badge, colour pair). | Accessibility Guild |
| `nextgen-styleguide/components/preview-pane`    | Sticky React preview of Shadcn components.      | Design Systems      |
| `nextgen-styleguide/scripts/generateGlobals.ts` | Fetch tokens → output CSS/JS; used in CI.       | Dev Infra           |

*Outside this folder, the only change is importing the exported schema array in `all-schemas-combined.ts`.*

## 10 · Dependencies & Risks · Dependencies & Risks

| Risk                      | Mitigation                                                                  |
| ------------------------- | --------------------------------------------------------------------------- |
| Tailwind 4 release delays | Keep generator loosely coupled; downgrade to tailwind‑plugin API if needed. |
| Designers bypass CMS      | Governance policy + CI lint that blocks direct CSS edits.                   |
| Slug rename breaks build  | Slugs read‑only + migration script for rare rename.                         |

## 11 · Glossary

| Term       | Definition                                         |
| ---------- | -------------------------------------------------- |
| **Token**  | Atomic design value (colour, radius, etc.).        |
| **Shadcn** | Unstyled React component set built on Tailwind.    |
| **WCAG**   | Web Content Accessibility Guidelines for contrast. |

---

*End of PRD — version 2*
